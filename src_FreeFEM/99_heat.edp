// ******************************
// **** steady heat equation ****
// ******************************

// vars & params
load "iovtk"
int N;
real u;

// square region
N = 128;
border G1(t=0, 1) {x = t ; y = 0.; label=1;}
border G2(t=0, 1) {x = 1.; y = t ; label=2;}
border G3(t=0, 1) {x = -1. * t + 1.; y = 1.; label=3;}
border G4(t=0, 1) {x = 0.; y = -1. * t + 1.; label=4;}

// mesh
mesh Th = buildmesh(G1(N) + G2(N) + G3(N) + G4(N));
plot(Th, ps = "./eps_files/99_heat_mesh.eps");

// finite element space w/ P1 elements
fespace Vh(Th, P1);
Vh uh, vh;

// source
func f = sin(2. * pi * (x + y));

// boundary condition
func g = 0.;    // Dirichlet boundary
func h = .05;   // Neumann boundary

// main
solve heat(uh, vh) = int2d(Th)(dx(uh) * dx(vh) + dy(uh) * dy(vh)) 
                     + int2d(Th)(f * vh) 
                     + on(1, uh = g)
                     - int1d(Th, 2, 3, 4)(h * vh);

// visualize the result
//plot(Th, uh, ps="./output/99_heat_sol.eps");
plot(uh, fill=true, value=true, ps="./output/99_heat_sol.eps");
savevtk("./output/99_heat_sol.vtk", Th, uh, dataname="Temperature");

